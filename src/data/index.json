{
  "nodes": [
    {
      "id": 1,
      "label": "Бессерверная функция",
      "description": "Блок программного кода, который выполняется в ответ на событие без необходимости управления серверной инфраструктурой",
      "group": 1
    },
    {
      "id": 2,
      "label": "Бессерверный контейнер",
      "description": "Изолированный, автономный компонент, который содержит всё необходимое для выполнения приложения или сервиса, без необходимости управления инфраструктурой",
      "group": 1
    },
    {
      "id": 3,
      "label": "Бессерверная база данных",
      "description": "Хранилище данных, где управление инфраструктурой, масштабирование и обслуживание осуществляются провайдером",
      "group": 1
    },
    {
      "id": 4,
      "label": "Триггер",
      "description": "Событие или условие, которое инициирует выполнение какого-либо действия в облаке. Позволяет запускать бессерверный контейнер/функцию при наступлении какого-либо события",
      "group": 2
    },
    {
      "id": 5,
      "label": "Экземпляр",
      "description": "Конкретная реализация бессерверной функции или контейнеризированного приложения, которая запускается в ответ на триггеры в рамках предоставленных вычислительных ресурсов",
      "group": 2
    },
    {
      "id": 6,
      "label": "Холодный старт",
      "description": "Явление, при котором бессерверная функция/контейнер запускается впервые после периода неактивности. В этом случае бессерверная платформа создает новый экземпляр функции, выделяя ему вычислительные ресурсы",
      "group": 2
    },
    {
      "id": 7,
      "label": "Подготовленные экземляры",
      "description": "Заранее запущенные и готовые к выполнению бессерверные функции или контейнеры, позволяющие снизить задержку при запросах",
      "group": 2
    },
    {
      "id": 8,
      "label": "Serverless Framework",
      "description": "Фреймоврк, предназначенных для упрощения разработки, развертывания и управления бессерверными приложениями",
      "group": 3
    },
    {
      "id": 9,
      "label": "Точка входа",
      "description": "Точка инициации выполнения бессерверных функции или контейнеров, которая обеспечивает начальную точку для активации. Для контейнеров используется инструкция Docker'а ENTRYPOINT или CMD. Для функий - имя функции-обработчика",
      "group": 3
    },
    {
      "id": 10,
      "label": "Stateless",
      "description": "Подход, при котором отсутствует сохранения состояния между выполнениями функций или контейнеров. Для сохранения состояния необходимо использовать хранилища, такие как s3 или базы данных",
      "group": 4
    },
    {
      "id": 11,
      "label": "Pay-as-u-go",
      "description": "Модель оплаты, при которой пользователь оплачивает только те ресурсы, которые использованы",
      "group": 4
    },
    {
      "id": 12,
      "label": "Вычислительные ресурсы",
      "description": "Процессорные мощности, объем оперативной памяти и другие ресурсы, необходимые для выполнения бессерверных функций или контейнеров",
      "group": 4
    },
    {
      "id": 13,
      "label": "Среда выполнения",
      "description": "Программная среда, в которой осуществляется выполнение бессерверных функций, предоставляя необходимые условия для их работы и взаимодействия с внешними ресурсами. Примером могут служить среды Node.js, Java, Go и другие",
      "group": 3
    },
    {
      "id": 14,
      "label": "Предзагружаемая среда выполнения",
      "description": "Подготовленное окружение, готовое к выполнению бессерверных функций или контейнеров с минимальной задержкой",
      "group": 2
    },
    {
      "id": 15,
      "label": "Terraform",
      "description": "Инструмент для автоматизации управления инфраструктурой как кода, предоставляющий средства для декларативного описания и развертывания инфраструктурных ресурсов",
      "group": 3
    }
  ],
  "edges": [
    {
      "from": 1,
      "to": 4,
      "label": "Вызывается"
    },
    {
      "from": 2,
      "to": 4,
      "label": "Вызывается"
    },
    {
      "from": 1,
      "to": 3,
      "label": "Может хранить состояние в"
    },
    {
      "from": 2,
      "to": 3,
      "label": "Может хранить состояние в"
    },
    {
      "from": 1,
      "to": 8,
      "label": "Может развертываться с помощью"
    },
    {
      "from": 1,
      "to": 15,
      "label": "Может развертываться с помощью"
    },
    {
      "from": 2,
      "to": 15,
      "label": "Может развертываться с помощью"
    },
    {
      "from": 3,
      "to": 15,
      "label": "Может развертываться с помощью"
    },
    {
      "from": 1,
      "to": 13,
      "label": "Выполняется в поддерживаемой"
    },
    {
      "from": 1,
      "to": 9,
      "label": "Содержит едиственную"
    },
    {
      "from": 1,
      "to": 9,
      "label": "Содержит едиственную"
    },
    {
      "from": 1,
      "to": 10,
      "label": "Реализует концепцию"
    },
    {
      "from": 1,
      "to": 10,
      "label": "Реализует концепцию"
    },
    {
      "from": 1,
      "to": 12,
      "label": "Использует"
    },
    {
      "from": 2,
      "to": 12,
      "label": "Использует"
    },
    {
      "from": 3,
      "to": 12,
      "label": "Использует"
    },
    {
      "from": 1,
      "to": 5,
      "label": "Запускается в виде"
    },
    {
      "from": 2,
      "to": 5,
      "label": "Запускается в виде"
    },
    {
      "from": 14,
      "to": 6,
      "label": "Позволяет сократить время "
    },
    {
      "from": 13,
      "to": 14,
      "label": "Может быть"
    },
    {
      "from": 1,
      "to": 11,
      "label": "Тарифицируется по модели"
    },
    {
      "from": 2,
      "to": 11,
      "label": "Тарифицируется по модели"
    },
    {
      "from": 3,
      "to": 11,
      "label": "Тарифицируется по модели"
    },
    {
      "from": 1,
      "to": 7,
      "label": "Может иметь"
    },
    {
      "from": 2,
      "to": 7,
      "label": "Может иметь"
    }
  ]
}